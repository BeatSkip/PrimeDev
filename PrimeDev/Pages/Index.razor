@page "/"

@inject PrimeManager manager

<MudGrid Spacing="5" Justify="Justify.Center">
   
@if (!manager.IsInitialized)
{
    <MudItem>
        <MudPaper Style="padding: 15pt; padding-bottom:5pt;" Class="d-flex flex-column align-center justify-center mud-width-full py-8">
                    <MudText Typo="Typo.h6" Align="Align.Center">It seems you haven't connected your HP Prime Yet!</MudText>
                    <MudText Typo="Typo.subtitle1" Align="Align.Center">Click the connection button at the top right corner of this page to start the discovery and connection.</MudText>
                     </MudPaper>
    </MudItem>
}
else
{
    <MudItem xs=4>
        <MudPaper Style="padding: 15pt; padding-bottom:5pt;" Class="d-flex flex-column align-center justify-center mud-width-full py-8">
            <MudText Typo="Typo.h6" Align="Align.Center">Initialized!</MudText>
            <MudText Typo="Typo.subtitle1" Align="Align.Center">Press the following button to initialize a connection test</MudText>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="SendTest" Style="margin-top: 15pt;">Send Test!</MudButton>
        </MudPaper>
    </MudItem>

    <MudItem xs=4>
        <MudPaper Style="padding: 15pt; padding-bottom:5pt;" Class="d-flex flex-column align-center justify-center mud-width-full py-8">
            <MudText Typo="Typo.h6" Align="Align.Center">Request Screenshot</MudText>
            <MudText Typo="Typo.subtitle1" Align="Align.Center">Press the following button to request a screenshot</MudText>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="GetScreenshot" Style="margin-top: 15pt;">Capture Screen</MudButton>
        </MudPaper>
    </MudItem>

        @if (screenshotreceived)
        {
             <MudItem xs=4>
        <MudPaper Style="padding: 15pt; padding-bottom:5pt;" Class="d-flex flex-column align-center justify-center mud-width-full py-8">
            <img width="320" height="240" src="@screenshot">
        </MudPaper>
    </MudItem>
        }

    }
       
    
    <MudItem xs=12>
        @foreach(var msg in messages)
        {
            <MudText Typo="Typo.subtitle1" Align="Align.Left">Message: @msg</MudText>
        }
    </MudItem>

   
</MudGrid>

@code{
    private PrimeCalculator prime;
    bool screenshotreceived = false;
    string screenshot = "";
    private List<string> messages = new List<string>();

    public async Task SendTest()
    {
        Console.WriteLine("Sending Test packet!");

        //prime.Connected += CurrentPrime_Connected;
        //prime.DataReceived += CurrentPrime_Received;
        //prime.ChatMessageReceived += CurrentPrime_Message;
    }

    public async Task GetScreenshot()
    {
        Console.WriteLine("[Index.rzr] - Getting screenshot");
        if (prime == null)
        {
            Console.WriteLine("prime=null!");
            return;   
        }


        await prime.GetScreenshot(ShowScreenshot);

        //prime.Connected += CurrentPrime_Connected;
        //prime.DataReceived += CurrentPrime_Received;
        //prime.ChatMessageReceived += CurrentPrime_Message;
    }


    private void ShowScreenshot(string base64img){
        screenshot = "data:image/png;base64," + base64img; // base64 string  
        screenshotreceived = true;
        StateHasChanged();
    }

    async void CurrentPrime_Connected(object? sender, EventArgs e)
    {
        Console.WriteLine("[Index.rzr] - Prime is connected!");
        await prime.SendChatMessage("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut id feugiat lectus, eu hendrerit massa. Nunc dictum lacus vitae velit fringilla malesuada. Quisque ullamcorper lacus ac ex laoreet molestie. Praesent dapibus fringilla ipsum vel tempor. Vestibulum dapibus fringilla volutpat. In hac habitasse platea dictumst. Maecenas euismod est nisi, sed pharetra lectus posuere et. Phasellus felis nibh, pulvinar at felis pharetra, tincidunt porta turpis. Vestibulum non pharetra enim. Suspendisse pellentesque congue molestie. Fusce tincidunt mattis pharetra. In lacinia consectetur magna. Nulla tempus, sapien eget feugiat eleifend, libero leo maximus sem, in lacinia diam arcu sed metus." +
            "Donec at risus semper, pulvinar orci dictum, semper eros. Praesent vehicula lorem ac viverra congue. Praesent mi orci, tincidunt ac suscipit et, posuere ac augue. Proin cursus ac eros non blandit. Fusce pretium mollis tellus in placerat. Phasellus scelerisque diam sed nulla gravida ultrices. Nulla at suscipit felis, id pellentesque est. In nec dolor nulla. Morbi sed massa convallis, luctus orci ac, vestibulum nisi." +
            "Fusce dui ligula, facilisis a felis vitae, dignissim consequat massa. Nunc quis tincidunt diam, sit amet congue ante. Integer et consequat odio. Donec id mi non nunc cursus vehicula quis luctus diam. Proin purus urna, dignissim nec lacus eu, faucibus mollis libero. Pellentesque dictum mauris nunc, consequat hendrerit metus auctor vitae. Duis mattis aliquam nibh. Pellentesque quis enim tincidunt, egestas sem non, aliquam purus. Maecenas auctor mauris maximus congue porttitor. Nulla porttitor molestie risus, ut aliquet eros ullamcorper a. Donec sit amet semper lectus, eu fermentum tellus. Praesent ornare tincidunt nulla id viverra. Nulla gravida tincidunt tortor at imperdiet." +
            "Praesent condimentum felis nisi, at fringilla erat molestie id. Vestibulum rhoncus laoreet arcu eu convallis. Nam justo est, pharetra sit amet vestibulum quis, interdum vel diam. Sed et faucibus ipsum. Integer a lacus commodo, iaculis velit in, luctus urna. Integer quis mauris ac leo cursus iaculis. Aliquam erat volutpat. Sed elementum sollicitudin dui, vel consequat justo iaculis sit amet. Nam pharetra risus vulputate nisl hendrerit fermentum. Aliquam rutrum rutrum mauris. Phasellus maximus lorem eu mi semper, nec pellentesque est hendrerit." +
            "Fusce condimentum ante vitae eros aliquam pretium eget vitae nisi. Ut ultricies, nulla a iaculis bibendum, libero libero sagittis leo, et dictum est enim non lorem. Proin felis est, accumsan vel aliquet eget, sagittis vel diam. Fusce rutrum porta lectus et ornare. In tempus ex tempus lacus egestas, nec rutrum sapien luctus. Pellentesque fermentum mi vitae ante laoreet viverra. In egestas venenatis metus, at dictum leo. Proin nulla felis, ullamcorper a gravida eu, dapibus id nunc. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Praesent a bibendum nisl, nec iaculis quam. Mauris luctus ipsum in urna convallis placerat. In commodo luctus nibh non semper." +
            "Donec posuere ultricies pellentesque. Interdum et malesuada fames ac ante ipsum primis in faucibus. Aenean condimentum erat ligula, eget malesuada metus tincidunt eu. Vestibulum euismod tellus eu arcu dapibus pretium. Sed maximus, sapien eu laoreet efficitur, velit nisi ultricies lorem, id volutpat nulla lacus at nisl. Suspendisse porttitor eget sem ac pellentesque. Mauris tincidunt lorem sed auctor volutpat. Curabitur hendrerit, risus sit amet tincidunt consequat, ex eros ultricies nisl, quis semper ligula massa ut ipsum. Maecenas lectus magna, semper et maximus sed, pretium in diam. Proin porta quam eget diam mattis, eu ullamcorper dolor dictum. Proin ac feugiat ex. Nunc ante mi, interdum sed efficitur ac, commodo eu felis.");
        Console.WriteLine("Sent chat message!");
    }

    void CurrentPrime_Received(object? sender, PrimeWeb.DataReceivedEventArgs e)
    {
        Console.WriteLine("Prime is received data!");
        var tet = new PrimeUsbData(e.Data);

        Console.WriteLine(tet);
    }

    void CurrentPrime_Message(object? sender, PrimeWeb.MessageReceivedEventArgs e)
    {
        messages.Add((DateTime.Now.ToShortTimeString() + "\t-\t" +  e.Message));

        StateHasChanged();
    }

    private void ManagerChanged()
    {
        this.prime = manager.GetCalculator();
        this.prime.Connected += CurrentPrime_Connected;
        StateHasChanged();
    }

    
    protected override void OnInitialized()
    {
         manager.OnChange += ManagerChanged;
    }

    public void Dispose()
    {
        manager.OnChange -= ManagerChanged;
    }

}