/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'libHPPrimeCalculator.so'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

/* 1 */
struct __attribute__((aligned(4))) Elf32_Sym
{
  unsigned __int32 st_name;
  unsigned __int32 st_value;
  unsigned __int32 st_size;
  unsigned __int8 st_info;
  unsigned __int8 st_other;
  unsigned __int16 st_shndx;
};

/* 2 */
struct Elf32_Rel
{
  unsigned __int32 r_offset;
  unsigned __int32 r_info;
};

/* 3 */
union Elf32_Dyn::$A263394DDF3EC2D4B1B8448EDD30E249
{
  unsigned __int32 d_val;
  unsigned __int32 d_ptr;
};

/* 4 */
struct Elf32_Dyn
{
  __int32 d_tag;
  union Elf32_Dyn::$A263394DDF3EC2D4B1B8448EDD30E249 d_un;
};

/* 5 */
struct Elf32_Verdef
{
  unsigned __int16 vd_version;
  unsigned __int16 vd_flags;
  unsigned __int16 vd_ndx;
  unsigned __int16 vd_cnt;
  unsigned __int32 vd_hash;
  unsigned __int32 vd_aux;
  unsigned __int32 vd_next;
};

/* 6 */
struct __attribute__((aligned(4))) Elf32_Verdaux
{
  unsigned __int32 vda_name;
  unsigned __int32 vda_next;
};

/* 7 */
struct __attribute__((aligned(4))) Elf32_Verneed
{
  unsigned __int16 vn_version;
  unsigned __int16 vn_cnt;
  unsigned __int32 vn_file;
  unsigned __int32 vn_aux;
  unsigned __int32 vn_next;
};

/* 8 */
struct __attribute__((aligned(4))) Elf32_Vernaux
{
  unsigned __int32 vna_hash;
  unsigned __int16 vna_flags;
  unsigned __int16 vna_other;
  unsigned __int32 vna_name;
  unsigned __int32 vna_next;
};

/* 9 */
typedef signed __int32 _Unwind_Sword;

/* 10 */
typedef unsigned __int32 _Unwind_Ptr;

/* 11 */
typedef unsigned __int32 _Unwind_Internal_Ptr;

/* 12 */
typedef unsigned __int32 _Unwind_Word;

/* 13 */
typedef int _Unwind_Action;

/* 14 */
typedef unsigned __int64 _Unwind_Exception_Class;

/* 15 */
enum $BDF88968CAE1EA74E42809B9AE857E7C
{
  _URC_NO_REASON = 0x0,
  _URC_FOREIGN_EXCEPTION_CAUGHT = 0x1,
  _URC_FATAL_PHASE2_ERROR = 0x2,
  _URC_FATAL_PHASE1_ERROR = 0x3,
  _URC_NORMAL_STOP = 0x4,
  _URC_END_OF_STACK = 0x5,
  _URC_HANDLER_FOUND = 0x6,
  _URC_INSTALL_CONTEXT = 0x7,
  _URC_CONTINUE_UNWIND = 0x8,
};

/* 16 */
typedef enum $BDF88968CAE1EA74E42809B9AE857E7C _Unwind_Reason_Code;

/* 17 */
struct _Unwind_Exception;

/* 18 */
struct _Unwind_Context;

/* 19 */
typedef void (__cdecl *_Unwind_Exception_Cleanup_Fn)(_Unwind_Reason_Code, struct _Unwind_Exception *);

/* 20 */
typedef _Unwind_Reason_Code (__cdecl *_Unwind_Personality_Fn)(int, _Unwind_Action, _Unwind_Exception_Class, struct _Unwind_Exception *, struct _Unwind_Context *);

/* 21 */
typedef _Unwind_Reason_Code (__cdecl *_Unwind_Stop_Fn)(int, _Unwind_Action, _Unwind_Exception_Class, struct _Unwind_Exception *, struct _Unwind_Context *, void *);

/* 22 */
typedef _Unwind_Reason_Code (__cdecl *_Unwind_Trace_Fn)(struct _Unwind_Context *, void *);

/* 23 */
typedef _Unwind_Sword __guard;

/* 24 */
struct type_info;

/* 25 */
struct __class_type_info;

